<?php
/**
 * @file
 * Module's main file.
 */

/**
 * Defines site main theme name.
 */
define('DINO_THEME_NAME', 'dino');

/**
 * Defines dinosaurs lifetime in seconds.
 */
define('DINOSAUR_RANK_1_LIFETIME', 259200); // 3 days
define('DINOSAUR_RANK_2_LIFETIME', 518400); // 6 days
define('DINOSAUR_RANK_3_LIFETIME', 1036800); // 12 days
define('DINOSAUR_RANK_4_LIFETIME', 2073600); // 24 days

/**
 * Defines jurassic dinosaurs feeding.
 */
define('JURASSIC_CONSUME_MEAT', 'carnivore'); // Meat
define('JURASSIC_CONSUME_HERB', 'herbivore'); // Herb, plants
define('JURASSIC_CONSUME_ALL', 'omnivore'); // Meat, herb, plants

/**
 * Implements hook_init().
 */
function dino_core_init() {
  if (current_path() == "user") {
    global $user;
    if (user_is_logged_in()) {
      drupal_goto('user/' . $user->uid . '/edit');
    }
    else {
      drupal_goto('<front>');
    }
  }
}

/**
 * Implements hook_menu_alter().
 */
function dino_core_menu_alter(&$items) {
  $items['user']['type'] = MENU_CALLBACK;
  $items['user/register']['type'] = MENU_CALLBACK;
  $items['user/password']['access callback'] = FALSE;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function dino_core_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path === 'user/%/edit') {
    $data['tabs'] = [];
  }
}

/**
 * Implements hook_block_info_alter().
 */
function dino_core_block_info_alter(&$blocks, $theme, $code_blocks) {
  // Configure default blocks.
  $blocks['system']['navigation']['status'] = FALSE;
  $blocks['system']['powered-by']['status'] = FALSE;
  $blocks['user']['login']['region'] = 'content';
  $blocks['user']['login']['visibility'] = BLOCK_VISIBILITY_LISTED;
  $blocks['user']['login']['pages'] = '<front>';
}

/**
 * Implements hook_schema_alter().
 */
function dino_core_schema_alter(&$schema) {
  $schema['users']['fields']['timer'] = [
    'description' => 'The Unix timestamp saved time when the timer should be completed.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  ];
  $schema['users']['fields']['catch'] = [
    'description' => 'Food ID indicates whether the bait is put.',
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'default' => 0,
  ];
  $schema['users']['fields']['dinosaurs'] = [
    'type' => 'text',
    'size' => 'normal',
    'not null' => FALSE,
    'description' => 'Dinosaurs ID\'s opened by user.',
  ];
  $schema['users']['fields']['food'] = [
    'type' => 'text',
    'size' => 'normal',
    'not null' => FALSE,
    'description' => 'Food ID\'s received by user.',
  ];
}

/**
 * Implements hook_mail_alter().
 */
function dino_core_mail_alter(&$message) {
  // Not need to send any emails for this project.
  $message['send'] = FALSE;
}

/**
 * Implements hook_form_alter().
 */
function dino_core_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_login_block':
      $form['links'] = [
        '#type' => 'link',
        '#title' => t('Create new account'),
        '#href' => 'collection/nojs',
        '#attributes' => [
          'class' => [
            'ctools-use-modal',
            'ctools-modal-dino-popup',
          ],
        ],
        '#prefix' => '<div class="register-link">',
        '#suffix' => '</div>',
      ];
      $form['links']['#weight'] = 20;
      $form['#attributes'] = [
        'class' => ['authorization', 'columns', 'medium-6'],
      ];
      $form['actions']['#weight'] = 10;
      break;

    case 'user_register_form':
      // Remove useless field email.
      $form['account']['mail']['#access'] = FALSE;
      // Dumb value will rewrite with {name}@user.com
      // @see dino_core_user_presave().
      $form['account']['mail']['#value'] = 'new@user.com';
      // Hide other unnecessary text.
      $form['account']['name']['#description'] = '';
      $form['account']['pass']['#description'] = '';

      $form['actions']['submit']['#ajax'] = [
        'callback' => 'custom_user_register_ajax_callback',
      ];
      break;

    case 'user_profile_form':
      $form['account']['current_pass']['#description'] = '';

      $form['account']['name']['#access'] = TRUE;
      $form['account']['name']['#required'] = FALSE;
      $form['account']['name']['#description'] = t('You can change the login without entering a password. You must enter a new login for next authorization.');
      // Hide unnecessary field email.
      $form['account']['mail']['#access'] = FALSE;
      break;
  }
}

/**
 * Implements hook_user_presave().
 */
function dino_core_user_presave(&$edit, $account, $category) {
  $prefix = $account->uid ? $account->uid : rand(0, PHP_INT_MAX);
  $edit['mail'] = "{$prefix}@user.com";
}
