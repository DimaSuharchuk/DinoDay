<?php
/**
 * @file
 * Custom functionality for DinoDay site.
 */

/**
 * Defined this module path.
 */
define('CUSTOM_MODULE_PATH', drupal_get_path('module', 'custom'));

require_once CUSTOM_MODULE_PATH . '/pages/collection.page.inc';
require_once CUSTOM_MODULE_PATH . '/pages/food.page.inc';
require_once CUSTOM_MODULE_PATH . '/pages/settings.page.inc';
require_once CUSTOM_MODULE_PATH . '/pages/statistics.page.inc';

/**
 * Implements hook_menu().
 */
function custom_menu() {
  $items = [];
  $weight = 0;

  $items['collection'] = [
    'title' => 'Коллекция',
    'menu_name' => 'main-menu',
    'page callback' => 'custom_collection_page',
    'access callback' => TRUE,
    'weight' => $weight++,
  ];
  $items['food'] = [
    'title' => 'Пища',
    'menu_name' => 'main-menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['custom_food_form'],
    'access callback' => 'user_is_logged_in',
    'weight' => $weight++,
  ];
  $items['settings'] = [
    'title' => 'Настройки',
    'menu_name' => 'main-menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['custom_settings_form'],
    'access callback' => 'user_is_logged_in',
    'weight' => $weight++,
  ];
  $items['statistics'] = [
    'title' => 'Статистика',
    'menu_name' => 'main-menu',
    'page callback' => 'custom_statistics_page',
    'access callback' => TRUE,
    'weight' => $weight++,
  ];

  return $items;
}

/**
 * Implements hook_block_info().
 */
function custom_block_info() {
  $blocks = [];

  $blocks['timer'] = [
    'info' => 'Timer',
    'cache' => DRUPAL_NO_CACHE,
    'weight' => -1,
    'status' => TRUE,
    'region' => 'header',
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function custom_block_view($delta = '') {
  $block = [];
  switch ($delta) {
    case 'timer':
      $block['content'] = [];
      $block['content']['form'] = drupal_get_form('custom_timer_form');
      $block['content']['food_reward_wrapper'] = [
        '#type' => 'container',
        '#attributes' => [
          'id' => 'food-reward-wrapper',
        ],
      ];
      break;
  }
  return $block;
}

/**
 * Form with button and timer if button clicked.
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 * @throws \Exception
 */
function custom_timer_form($form, &$form_state) {
  global $user;

  if ($user->uid) {
    if ($user->timer <= time()) {
      $form['start_timer'] = [
        '#type' => 'button',
        '#value' => 'Получить ингредиент',
        '#ajax' => [
          'callback' => 'custom_timer_ajax_callback',
          'wrapper' => 'custom-timer-form',
          'method' => 'replace',
          'effect' => 'fade',
        ],
      ];
    }
    else {
      $form['timer'] = [
        '#markup' => theme('html_tag', [
          'element' => [
            '#tag' => 'h2',
            '#attributes' => [
              'class' => 'active-timer',
            ],
            '#value' => date('i:s', $user->timer - time()),
          ],
        ]),
      ];
    }

    $form['#attached'] = [
      'js' => [
        drupal_get_path('module', 'custom') . '/js/timer.js',
      ],
    ];
  }

  return $form;
}

/**
 * Ajax callback for timer form.
 *
 * @param $form
 * @param $form_state
 *
 * @return array|mixed
 * @throws \Exception
 */
function custom_timer_ajax_callback($form, &$form_state) {
  global $user;

  // Save timestamp when user can click the button again.
  $user->timer = time() + 30 * 60;
  // Save food ID to user.
  $user_food = explode(',', $user->food);
  $random_food_id = rand(1, 16);
  array_push($user_food, $random_food_id);
  $user->food = implode(',', $user_food);

  user_save($user);

  $commands = [];
  $commands[] = ajax_command_replace('#custom-timer-form', drupal_render(drupal_get_form('custom_timer_form')));
  $commands[] = ajax_command_replace('#custom-food-form', drupal_render(drupal_get_form('custom_food_form')));

  $food_entity = entity_load_single('food', $random_food_id);
  $commands[] = ajax_command_html('#food-reward-wrapper', "<img src='{$food_entity->picture}' />");

  return ['#type' => 'ajax', '#commands' => $commands];
}
